#pragma once

#ifdef min
    #undef min
#endif

#ifdef max
    #undef max
#endif

namespace std
{
	#ifdef max
		#undef max
	#endif

	#ifdef min
		#undef min
	#endif

    template<class T> 
    const T& min(const T& a, const T& b)
    {
        return (b < a) ? b : a;
    }

    template<class T> 
    const T& max(const T& a, const T& b)
    {
        return (a < b) ? b : a;
    }

	template<class T>
	constexpr const T& clamp( const T& v, const T& lo, const T& hi )
	{
		if (v < lo)
			return lo;
		else if (hi < v)
			return hi;
		else
			return v;
	}

	template<class InputIt1, class InputIt2>
	bool equal(InputIt1 first1, InputIt1 last1, 
			InputIt2 first2)
	{
		for (; first1 != last1; ++first1, ++first2) {
			if (!(*first1 == *first2)) {
				return false;
			}
		}
		return true;
	}

	template <class InputIt1, class InputIt2, class BinaryPredicate>
	bool equal(InputIt1 first1, InputIt1 last1,
			   InputIt2 first2, BinaryPredicate p)
	{
		for (; first1 != last1; ++first1, ++first2)
		{
			if (!p(*first1, *first2))
			{
				return false;
			}
		}
		return true;
	}
}
